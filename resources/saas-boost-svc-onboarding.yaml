---
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: 2010-09-09
Description: AWS SaaS Boost Onboarding Service
Parameters:
  Environment:
    Description: Environment name
    Type: String
  SaaSBoostBucket:
    Description: SaaS Boost assets S3 bucket
    Type: String
  LambdaSourceFolder:
    Description: Folder for lambda source code to change on each deployment
    Type: String
  SaaSBoostUtilsLayer:
    Description: Utils Layer ARN
    Type: String
  ApiGatewayHelperLayer:
    Description: API Gateway Helper Layer ARN
    Type: String
  CloudFormationUtilsLayer:
    Description: CloudFormation Utils Layer ARN
    Type: String
  SaaSBoostEventBus:
    Description: SaaS Boost Eventbridge Bus
    Type: String
  SaaSBoostPrivateApi:
    Description: SaaS Boost Private API
    Type: String
  PrivateApiStage:
    Description: The API Gateway REST API stage name for the SaaS Boost private API
    Type: String
  ResourcesBucket:
    Description: S3 bucket containing tenant custom config files (zip archive)
    Type: String
Resources:
  OnboardingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub sb-${Environment}-onboarding
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      Tags:
        - Key: SaaS Boost
          Value: !Ref Environment
  CidrBlockTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub sb-${Environment}-cidr-mapping
      AttributeDefinitions:
        - AttributeName: cidr_block
          AttributeType: S
      KeySchema:
        - AttributeName: cidr_block
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      Tags:
        - Key: SaaS Boost
          Value: !Ref Environment
  OnboardingValidationQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub sb-${Environment}-onboarding-validation
      VisibilityTimeout: 60 # Must be greater than the Timeout setting on the Lambda
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt OnboardingValidationDLQ.Arn
        maxReceiveCount: 10
  OnboardingValidationDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub sb-${Environment}-onboarding-validation-dlq
  OnboardingTenantConfigQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub sb-${Environment}-onboarding-tenant-config
      VisibilityTimeout: 90
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt OnboardingTenantConfigDLQ.Arn
        maxReceiveCount: 10
  OnboardingTenantConfigDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub sb-${Environment}-onboarding-tenant-config-dlq
  OnboardingTenantConfigQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref OnboardingTenantConfigQueue
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Resource: !GetAtt OnboardingTenantConfigQueue.Arn
            Action:
              - SQS:SendMessage
  OnboardingTenantConfigEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sb-${Environment}-onboarding-tenant-config
      Description: SaaS Boost onboarding tenant config bucket events
      EventPattern: !Sub |
        {
          "source": [
            "aws.s3"
          ],
          "detail-type": [
            "Object Created"
          ],
          "detail": {
            "reason": [
              "PutObject"
            ],
            "bucket": {
              "name": [
                "${ResourcesBucket}"
              ]
            },
            "object": {
              "key": [{
                "prefix": "00temp"
              }]
            }
          }
        }
      State: ENABLED
      Targets:
        - Arn: !GetAtt OnboardingTenantConfigQueue.Arn
          Id: !Sub sb-${Environment}-onboarding-tenant-config
  PopulateDynamoDBExecRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-populate-ddb-role-${AWS::Region}
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub sb-${Environment}-populate-ddb-policy-${AWS::Region}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DescribeLogStreams
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - dynamodb:Scan
                  - dynamodb:BatchWriteItem
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${CidrBlockTable}
  PopulateDynamoDBLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-populate-ddb
      RetentionInDays: 30
  # Fills out the CIDR block lookup table used during onboarding
  PopulateDynamoDB:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-populate-ddb
      Role: !GetAtt PopulateDynamoDBExecRole.Arn
      Runtime: java11
      Timeout: 60
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.CidrDynamoDB
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref CloudFormationUtilsLayer
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/CidrDynamoDB-lambda.zip
  InvokePopulateDynamoDB:
    Type: Custom::CustomResource
    Properties:
      ServiceToken: !GetAtt PopulateDynamoDB.Arn
      Table: !Ref CidrBlockTable
  OnboardingServiceBasePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      #ManagedPolicyName: !Sub sb-${Environment}-onboarding-svc-policy-${AWS::Region}
      Description: Onboarding Service base policy for CRUD operations
      Path: '/'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:PutLogEvents
            Resource:
              - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
          - Effect: Allow
            Action:
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:CreateLogStream
            Resource:
              - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
          - Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              - dynamodb:Scan
              - dynamodb:Query
              - dynamodb:UpdateItem
            Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${OnboardingTable}
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${CidrBlockTable}
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource:
              - !Sub arn:aws:s3:::${SaaSBoostBucket}
              - !Sub arn:aws:s3:::${ResourcesBucket}
          - Effect: Allow
            Action:
              - s3:Get*
              - s3:PutObject
              - s3:DeleteObject
            Resource:
              - !Sub arn:aws:s3:::${SaaSBoostBucket}/*
              - !Sub arn:aws:s3:::${ResourcesBucket}/*
          - Effect: Allow
            Action:
              - events:PutEvents
            Resource:
              - !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/${SaaSBoostEventBus}
          - Effect: Allow
            Action:
              - events:DescribeRule
              - events:DeleteRule
              - events:PutRule
              - events:PutTargets
              - events:RemoveTargets
            Resource:
              - !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/*
          - Effect: Allow
            Action:
              - sqs:SendMessage
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:ChangeMessageVisibility
            Resource:
              - !GetAtt OnboardingValidationQueue.Arn
              - !GetAtt OnboardingTenantConfigQueue.Arn
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource:
              - !GetAtt OnboardingValidationDLQ.Arn
              - !GetAtt OnboardingTenantConfigDLQ.Arn
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/sb-private-api-trust-role-${Environment}-${AWS::Region}
          - Effect: Allow
            Action:
              - ecr:ListImages
              - ecr:CreateRepository
              - ecr:DeleteRepository
            Resource:
              - !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/*
          - Effect: Allow
            Action:
              - apigateway:GET
            Resource:
              - arn:aws:apigateway:*::/restapis/*/resources
          - Effect: Allow
            Action:
              #- lambda:Get*
              #- lambda:CreateFunction
              - lambda:InvokeFunction
              #- lambda:UpdateFunctionCode
              - lambda:AddPermission
              - lambda:RemovePermission
            Resource:
              #- !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:tenant*
              - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*deploy*
              - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:saas-boost-app-services-macro
  OnboardingServiceTenantProvisionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      #ManagedPolicyName: !Sub sb-${Environment}-onboarding-svc-policy-${AWS::Region}
      Description: Onboarding Service policy for base tenant environment provisioning
      Path: '/'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - cloudformation:CreateStack
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
            Resource:
              - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/sb-${Environment}*
              - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:transform/saas-boost-app-services-macro
          - Effect: Allow
            Action:
              - sns:Publish
            Resource:
              - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:sb-*
          - Effect: Allow
            Action:
              - ssm:Get*
              - ssm:PutParameter
            Resource:
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/saas-boost/${Environment}/*
              - arn:aws:ssm:*:*:parameter/aws/service/ami-windows-latest/*
          - Effect: Allow
            Action:
              - ecs:DescribeClusters
            Resource:
              - !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/sb-${Environment}-tenant*
          - Effect: Allow
            Action:
              - codepipeline:CreatePipeline
              - codepipeline:GetPipeline
              - codepipeline:GetPipelineState
              - codepipeline:UpdatePipeline
            Resource:
              - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:sb-${Environment}-tenant*
          - Effect: Allow
            Action:
              - kms:TagResource
              - kms:PutKeyPolicy
              - kms:CreateAlias
              - kms:UpdateAlias
            Resource:
              - !Sub arn:aws:kms:*:${AWS::AccountId}:alias/*
              - !Sub arn:aws:kms:*:${AWS::AccountId}:key/*
          - Effect: Allow
            Action:
              - route53:GetHostedZone
              - route53:ChangeResourceRecordSets
              - route53:ListResourceRecordSets
              - route53:ChangeTagsForResource
              - route53:ListQueryLoggingConfigs
              - route53:DeleteHostedZone
            Resource:
              - arn:aws:route53:::hostedzone/*
          - Effect: Allow
            Action:
              - route53:GetChange
            Resource:
              - arn:aws:route53:::change/*
          - Effect: Allow
            Action:
              - route53:CreateHostedZone
              - ec2:CreateInternetGateway
              - ec2:CreateVpc
              - ec2:ModifyVpcAttribute
              - ec2:AttachInternetGateway
              - ec2:CreateSubnet
              - ec2:CreateSecurityGroup
              - ec2:CreateRouteTable
              - ec2:AssociateRouteTable
              - ec2:Describe*
              - ec2:CreateNetworkInterface
              - elasticloadbalancing:Describe*
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:RemoveTags
              - kms:List*
              - kms:CreateKey
              - kms:Describe*
              - kms:Get*
            Resource:
              - '*'
  OnboardingServiceComputeProvisionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      #ManagedPolicyName: !Sub sb-${Environment}-onboarding-svc-policy-${AWS::Region}
      Description: Onboarding Service policy for tenant environment compute provisioning
      Path: '/'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:PutRetentionPolicy
            Resource:
              - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/ecs/sb-${Environment}-tenant*
              - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sb-${Environment}-tenant*
          - Effect: Allow
            Action:
              - ec2:CreateTags
            Resource:
              - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:internet-gateway/*
              - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc/*
              - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:route-table/*
              - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/*
              - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway/*
              - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway-attachment/*
          - Effect: Allow
            Action:
              - ssm:AddTagsToResource
            Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*
          - Effect: Allow
            Action:
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:RevokeSecurityGroupEgress
              - ec2:AuthorizeSecurityGroupEgress
            Resource:
              - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:security-group/*
          - Effect: Allow
            Action:
              - ec2:CreateRoute
            Resource:
              - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:route-table/*
          - Effect: Allow
            Action:
              - ec2:CreateTransitGatewayVpcAttachment
            Resource:
              - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc/*
              - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/*
              - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway/*
              - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway-attachment/*
          - Effect: Allow
            Action:
              - ec2:CreateTransitGatewayRoute
              - ec2:AssociateTransitGatewayRouteTable
            Resource:
              - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway-route-table/*
              - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway-attachment/*
          - Effect: Allow
            Action:
              - elasticloadbalancing:CreateTargetGroup
              - elasticloadbalancing:ModifyTargetGroupAttributes
            Resource:
              - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:targetgroup/*/*
          - Effect: Allow
            Action:
              - elasticloadbalancing:CreateLoadBalancer
              - elasticloadbalancing:ModifyLoadBalancerAttributes
              - elasticloadbalancing:CreateListener
            Resource:
              - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:loadbalancer/app/*/*
              - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:loadbalancer/net/*/*
          - Effect: Allow
            Action:
              - elasticloadbalancing:CreateRule
            Resource:
              - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:listener/app/*/*
              - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:listener/net/*/*
          - Effect: Allow
            Action:
              - iam:CreateServiceLinkedRole
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
            Condition:
              StringLike:
                iam:AWSServiceName:
                  - ecs.application-autoscaling.amazonaws.com
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
          - Effect: Allow
            Action:
              - iam:CreateInstanceProfile
              - iam:AddRoleToInstanceProfile
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:instance-profile/Tenant-*
          - Effect: Allow
            Action:
              - ecs:PutClusterCapacityProviders
              - ecs:DescribeCapacityProviders
            Resource:
              - !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:capacity-provider/*
          - Effect: Allow
            Action:
              - ecs:CreateService
              - ecs:DescribeServices
              - ecs:UpdateService
            Resource:
              - !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:service/sb-${Environment}-tenant*
          - Effect: Allow
            Action:
              - servicediscovery:CreateService
            Resource:
              - !Sub arn:aws:servicediscovery:${AWS::Region}:${AWS::AccountId}:namespace/*
          - Effect: Allow
            Action:
              - servicediscovery:GetService
            Resource:
              - !Sub arn:aws:servicediscovery:${AWS::Region}:${AWS::AccountId}:service/*
          - Effect: Allow
            Action:
              - autoscaling:CreateLaunchConfiguration
            Resource:
              - !Sub arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:launchConfiguration:*:launchConfigurationName/Tenant-*
          - Effect: Allow
            Action:
              - autoscaling:CreateAutoScalingGroup
              - autoscaling:UpdateAutoScalingGroup
              - autoscaling:SuspendProcesses
              - autoscaling:ResumeProcesses
              - autoscaling:CreateOrUpdateTags
            Resource:
              - !Sub arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:autoScalingGroup:*:autoScalingGroupName/tenant-*
          - Effect: Allow
            Action:
              - servicediscovery:CreatePrivateDnsNamespace
              - servicediscovery:GetOperation
              - application-autoscaling:Describe*
              - application-autoscaling:RegisterScalableTarget
              - application-autoscaling:PutScalingPolicy
              - autoscaling:Describe*
              - ecs:CreateCluster
              - ecs:CreateCapacityProvider
              - ecs:RegisterTaskDefinition
              - ecs:DeregisterTaskDefinition
              - ecs:TagResource
              - ecs:UntagResource
            Resource:
              - '*'
  OnboardingServiceDatabaseProvisionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      #ManagedPolicyName: !Sub sb-${Environment}-onboarding-svc-policy-${AWS::Region}
      Description: Onboarding Service policy for tenant environment database provisioning
      Path: '/'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - rds:AddTagsToResource
              - rds:RemoveTagsFromResource
              - rds:CreateDBInstance
              - rds:CreateDBCluster
            Resource:
              - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:sb-${Environment}-*tenant*
              - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster-pg:*
              - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:subgrp:sb-${Environment}-*tenant*
              - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:sb-${Environment}-*tenant*
          - Effect: Allow
            Action:
              - rds:DescribeDBClusters
            Resource:
              - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:sb-${Environment}-*tenant*
          - Effect: Allow
            Action:
              - rds:DescribeDBSubnetGroups
              - rds:CreateDBSubnetGroup
            Resource:
              - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:subgrp:sb-${Environment}-*tenant*
          - Effect: Allow
            Action:
              - rds:DescribeDBInstances
            Resource:
              - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:sb-${Environment}-*tenant*
          - Effect: Allow
            Action:
              - iam:GetRole
              - iam:CreateRole
              - iam:GetRolePolicy
              - iam:PutRolePolicy
              - iam:PassRole
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/sb-${Environment}-*tenant*
              - !Sub arn:aws:iam::${AWS::AccountId}:role/sb-${Environment}-rds-bootstrap-role-${AWS::Region}
  OnboardingServiceStorageProvisionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      #ManagedPolicyName: !Sub sb-${Environment}-onboarding-svc-policy-${AWS::Region}
      Description: Onboarding Service policy for tenant environment storage provisioning
      Path: '/'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - elasticfilesystem:Describe*
              - elasticfilesystem:CreateMountTarget
              - elasticfilesystem:CreateTags
              - elasticfilesystem:PutFileSystemPolicy
              - elasticfilesystem:PutLifecycleConfiguration
            Resource:
              - !Sub arn:aws:elasticfilesystem:${AWS::Region}:${AWS::AccountId}:file-system/*
          - Effect: Allow
            Action:
              - fsx:CreateFileSystem
              - fsx:TagResource
            Resource:
              - !Sub arn:aws:fsx:${AWS::Region}:${AWS::AccountId}:file-system/*
          - Effect: Allow
            Action:
              - elasticfilesystem:CreateFileSystem
              - ds:DescribeDirectories
              - fsx:DescribeFileSystems
            Resource:
              - '*'
          - Effect: Allow
            Action:
              # This is for the AD stack -- need to figure out why update DNS wants to delete its SSM params
              - ssm:DeleteParameter
            Resource:
              - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/saas-boost/${Environment}/*
          # This is for the AD stack -- need to figure out why update DNS wants to delete the directory
          - Effect: Allow
            Action:
              - ds:DeleteDirectory
            Resource:
              - !Sub arn:aws:ds:${AWS::Region}:${AWS::AccountId}:directory/*
  OnboardingServiceExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-onboarding-svc-role-${AWS::Region}
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Ref OnboardingServiceBasePolicy
        - !Ref OnboardingServiceTenantProvisionPolicy
        - !Ref OnboardingServiceComputeProvisionPolicy
        - !Ref OnboardingServiceDatabaseProvisionPolicy
        - !Ref OnboardingServiceStorageProvisionPolicy
  OnboardingServiceDeleteTenantExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub sb-${Environment}-onboarding-delete-tenant-role-${AWS::Region}
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub sb-${Environment}-onboarding-delete-tenant-policy-${AWS::Region}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
              - Effect: Allow
                Action:
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:CreateLogStream
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:PutRetentionPolicy
                  - logs:DeleteLogGroup
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/ecs/sb-${Environment}-tenant*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sb-${Environment}-tenant*
              - Effect: Allow
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${OnboardingTable}
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${CidrBlockTable}
              - Effect: Allow
                Action:
                  - cloudformation:DeleteStack
                Resource:
                  - !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/Tenant-*
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:sb-*
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:PutParameter
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/saas-boost/${Environment}/*
                  - arn:aws:ssm:*:*:parameter/aws/service/ami-windows-latest/*
              - Effect: Allow
                Action:
                  - ec2:DeleteInternetGateway
                  - ec2:Describe*
                  - ec2:DeleteVpc
                  - ec2:DetachInternetGateway
                  - ec2:DeleteSubnet
                  - ec2:DeleteSecurityGroup
                  - ec2:DeleteRouteTable
                  - ec2:DisassociateRouteTable
                  - ec2:DeleteNetworkInterface
                  - kms:DeleteAlias
                  - kms:GetKeyPolicy
                  - kms:DescribeKey
                  - kms:UntagResource
                Resource: '*'
              - Effect: Allow
                Action:
                  - ec2:DeleteTags
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:internet-gateway/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:route-table/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway-attachment/*
              - Effect: Allow
                Action:
                  - ec2:RevokeSecurityGroupIngress
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:security-group/*
              - Effect: Allow
                Action:
                  - ec2:DeleteRoute
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:route-table/*
              - Effect: Allow
                Action:
                  - ec2:DeleteTransitGatewayVpcAttachment
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway-attachment/*
              - Effect: Allow
                Action:
                  - ec2:DeleteTransitGatewayRoute
                  - ec2:DisassociateTransitGatewayRouteTable
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway-route-table/*
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:transit-gateway-attachment/*
              - Effect: Allow
                Action:
                  - elasticloadbalancing:DeleteTargetGroup
                Resource:
                  - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:targetgroup/*/*
              - Effect: Allow
                Action:
                  - elasticloadbalancing:DeleteLoadBalancer
                Resource:
                  - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:loadbalancer/app/*/*
                  - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:loadbalancer/net/*/*
              - Effect: Allow
                Action:
                  - elasticloadbalancing:DeleteRule
                  - elasticloadbalancing:DeleteListener
                Resource:
                  - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:listener/app/*/*
                  - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:listener/net/*/*
                  - !Sub arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:listener-rule/app/*
              - Effect: Allow
                Action:
                  - iam:GetRolePolicy
                  - iam:DeleteRole
                  - iam:DeleteRolePolicy
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/*tenant*
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/sb-${Environment}-rds-bootstrap-role-${AWS::Region}
              - Effect: Allow
                Action:
                  - iam:DeleteInstanceProfile
                  - iam:RemoveRoleFromInstanceProfile
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:instance-profile/Tenant-*
              - Effect: Allow
                Action:
                  - iam:DeleteServiceLinkedRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
                Condition:
                  StringLike:
                    iam:AWSServiceName:
                      - ecs.application-autoscaling.amazonaws.com
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/sb-private-api-trust-role-${Environment}-${AWS::Region}
              - Effect: Allow
                Action:
                  - ecs:DescribeCapacityProviders
                  - ecs:DeleteCapacityProvider
                Resource:
                  - !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:capacity-provider/sb-${Environment}-tenant*
              - Effect: Allow
                Action:
                  - ecs:DescribeClusters
                  - ecs:DeleteCluster
                Resource:
                  - !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/sb-${Environment}-tenant*                  
              - Effect: Allow
                Action:
                  - ecs:DescribeServices
                  - ecs:DeleteService
                Resource:
                  - !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:service/sb-${Environment}-tenant*
              - Effect: Allow
                Action:
                  - codepipeline:GetPipeline
                  - codepipeline:GetPipelineState
                  - codepipeline:DeletePipeline
                  - codepipeline:TagResource
                  - codepipeline:UntagResource
                Resource:
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:sb-${Environment}-tenant*
              - Effect: Allow
                Action:
                  - route53:GetHostedZone
                  - route53:ListResourceRecordSets
                  - route53:ListQueryLoggingConfigs
                  - route53:DeleteHostedZone
                  - route53:ChangeResourceRecordSets
                Resource:
                  - arn:aws:route53:::hostedzone/*
              - Effect: Allow
                Action:
                  - elasticfilesystem:DeleteFileSystem
                  - ds:DescribeDirectories
                  - fsx:DescribeFileSystems
                  - application-autoscaling:Describe*
                  - application-autoscaling:DeleteScalingPolicy
                  - autoscaling:Describe*
                  - autoscaling:DeleteTags
                  - application-autoscaling:DeregisterScalableTarget
                  - ecs:DeleteCluster
                  - ecs:DescribeTaskDefinition
                  - ecs:DeregisterTaskDefinition
                  - ecs:UntagResource
                  - elasticloadbalancing:Describe*
                  - elasticloadbalancing:RemoveTags
                Resource: '*'
              - Effect: Allow
                Action:
                  - route53:GetChange
                Resource:
                  - arn:aws:route53:::change/*
              - Effect: Allow
                Action:
                  - elasticfilesystem:DescribeFileSystems
                  - elasticfilesystem:DeleteMountTarget
                  - elasticfilesystem:DescribeMountTargets
                  - elasticfilesystem:DescribeTags
                  - elasticfilesystem:DeleteFileSystemPolicy
                  - fsx:DescribeFileSystems
                  - fsx:DeleteFileSystem
                Resource:
                  - !Sub arn:aws:elasticfilesystem:${AWS::Region}:${AWS::AccountId}:file-system/*
                  - !Sub arn:aws:fsx:${AWS::Region}:${AWS::AccountId}:file-system/*
              - Effect: Allow
                Action:
                  - rds:DescribeDBClusters                  
                Resource:
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:tenant*
              - Effect: Allow
                Action:
                  - rds:DeleteDBCluster
                  - rds:CreateDBClusterSnapshot
                  - rds:DescribeDBClusterSnapshots
                Resource:
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:tenant*
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster-pg:*
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:subgrp:tenant*
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster-snapshot:*
              - Effect: Allow
                Action:
                  - rds:DescribeDBSubnetGroups
                  - rds:DeleteDBSubnetGroup
                Resource:
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:subgrp:tenant*
              - Effect: Allow
                Action:
                  - rds:DescribeDBInstances
                  - rds:DeleteDBInstance
                  - rds:RemoveTagsFromResource
                Resource:
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:*
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:tenant*
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:secgrp:*
                  - !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:subgrp:tenant*
              - Effect: Allow
                Action:
                  - events:PutEvents
                Resource:
                  - !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/${SaaSBoostEventBus}
              - Effect: Allow
                Action:
                  - autoscaling:DeleteLaunchConfiguration
                Resource:
                  - !Sub arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:launchConfiguration:*:launchConfigurationName/Tenant-*
              - Effect: Allow
                Action:
                  - autoscaling:DeleteAutoScalingGroup
                  - autoscaling:UpdateAutoScalingGroup
                  - autoscaling:SuspendProcesses
                Resource:
                  - !Sub arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:autoScalingGroup:*:autoScalingGroupName/tenant-*
              - Effect: Allow
                Action:
                  - ecr:ListImages
                Resource:
                  - !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/*
              - Effect: Allow
                Action:
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:InvokeFunction
                  - lambda:DeleteFunction
                Resource:
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:tenant*
              - Effect: Allow
                Action:
                  - ssm:Get*
                  - ssm:DeleteParameter
                Resource:
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/saas-boost/${Environment}/*                
              - Effect: Allow
                Action:
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - !Sub arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:security-group/*
  OnboardingServiceGetAllLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-get-all
      RetentionInDays: 30
  OnboardingServiceGetAll:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-get-all
      Role: !GetAtt OnboardingServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::getOnboardings
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Environment:
        Variables:
          ONBOARDING_TABLE: !Ref OnboardingTable
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Onboarding"
  OnboardingServiceGetByIdLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-get-by-id
      RetentionInDays: 30
  OnboardingServiceGetById:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-get-by-id
      Role: !GetAtt OnboardingServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::getOnboarding
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
      Environment:
        Variables:
          ONBOARDING_TABLE: !Ref OnboardingTable
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Onboarding"
  OnboardingServiceStartLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-start
      RetentionInDays: 30
  OnboardingServiceStart:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-start
      Role: !GetAtt OnboardingServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::insertOnboarding
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Environment:
        Variables:
          ONBOARDING_TABLE: !Ref OnboardingTable
          SAAS_BOOST_BUCKET: !Ref SaaSBoostBucket
          SAAS_BOOST_EVENT_BUS: !Ref SaaSBoostEventBus
          RESOURCES_BUCKET: !Ref ResourcesBucket
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Onboarding"
  OnboardingServiceUpdateLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-update
      RetentionInDays: 30
  OnboardingServiceUpdate:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-update
      Role: !GetAtt OnboardingServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::updateOnboarding
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Environment:
        Variables:
          ONBOARDING_TABLE: !Ref OnboardingTable
          SAAS_BOOST_BUCKET: !Ref SaaSBoostBucket
          SAAS_BOOST_EVENT_BUS: !Ref SaaSBoostEventBus
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
  OnboardingServiceDeleteLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-delete
      RetentionInDays: 30
  OnboardingServiceDelete:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-delete
      Role: !GetAtt OnboardingServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 300
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::deleteOnboarding
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Environment:
        Variables:
          ONBOARDING_TABLE: !Ref OnboardingTable
          SAAS_BOOST_BUCKET: !Ref SaaSBoostBucket
          SAAS_BOOST_EVENT_BUS: !Ref SaaSBoostEventBus
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
  OnboardingServiceEventHandlerLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-events
      RetentionInDays: 30
  OnboardingServiceEventHandler:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-events
      Role: !GetAtt OnboardingServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 45
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::handleOnboardingEvent
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Environment:
        Variables:
          SAAS_BOOST_ENV: !Ref Environment
          ONBOARDING_TABLE: !Ref OnboardingTable
          CIDR_BLOCK_TABLE: !Ref CidrBlockTable
          API_TRUST_ROLE: !Sub arn:aws:iam::${AWS::AccountId}:role/sb-private-api-trust-role-${Environment}-${AWS::Region}
          API_GATEWAY_HOST: !Sub ${SaaSBoostPrivateApi}.execute-api.${AWS::Region}.amazonaws.com
          API_GATEWAY_STAGE: !Ref PrivateApiStage
          SAAS_BOOST_BUCKET: !Ref SaaSBoostBucket
          SAAS_BOOST_EVENT_BUS: !Ref SaaSBoostEventBus
          ONBOARDING_STACK_SNS: !Sub '{{resolve:ssm:/saas-boost/${Environment}/ONBOARDING_STACK_SNS}}'
          ONBOARDING_APP_STACK_SNS: !Sub '{{resolve:ssm:/saas-boost/${Environment}/ONBOARDING_APP_STACK_SNS}}'
          ONBOARDING_VALIDATION_QUEUE: !Ref OnboardingValidationQueue
          ONBOARDING_VALIDATION_DLQ: !Ref OnboardingValidationDLQ
          RESOURCES_BUCKET: !Ref ResourcesBucket
          TENANT_CONFIG_DLQ: !Ref OnboardingTenantConfigDLQ
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
  OnboardingServiceValidationLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-validation
      RetentionInDays: 30
  OnboardingServiceValidation:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-validation
      Role: !GetAtt OnboardingServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 59 # Must be less than the VisibilityTimeout setting on the queue
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::processValidateOnboardingQueue
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Environment:
        Variables:
          SAAS_BOOST_ENV: !Ref Environment
          ONBOARDING_TABLE: !Ref OnboardingTable
          CIDR_BLOCK_TABLE: !Ref CidrBlockTable
          API_TRUST_ROLE: !Sub arn:aws:iam::${AWS::AccountId}:role/sb-private-api-trust-role-${Environment}-${AWS::Region}
          API_GATEWAY_HOST: !Sub ${SaaSBoostPrivateApi}.execute-api.${AWS::Region}.amazonaws.com
          API_GATEWAY_STAGE: !Ref PrivateApiStage
          SAAS_BOOST_BUCKET: !Ref SaaSBoostBucket
          SAAS_BOOST_EVENT_BUS: !Ref SaaSBoostEventBus
          ONBOARDING_VALIDATION_DLQ: !Ref OnboardingValidationDLQ
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
  ValidationEventMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      MaximumBatchingWindowInSeconds: 0
      Enabled: true
      EventSourceArn: !GetAtt OnboardingValidationQueue.Arn
      FunctionName: !GetAtt OnboardingServiceValidation.Arn
      FunctionResponseTypes:
        - ReportBatchItemFailures
  OnboardingTenantConfigLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-tenant-config-event
      RetentionInDays: 30
  OnboardingTenantConfig:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-tenant-config-event
      Role: !GetAtt OnboardingServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 89 # Must be less than the VisibilityTimeout setting on the queue
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::processTenantConfigQueue
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Environment:
        Variables:
          SAAS_BOOST_ENV: !Ref Environment
          ONBOARDING_TABLE: !Ref OnboardingTable
          CIDR_BLOCK_TABLE: !Ref CidrBlockTable
          API_TRUST_ROLE: !Sub arn:aws:iam::${AWS::AccountId}:role/sb-private-api-trust-role-${Environment}-${AWS::Region}
          API_GATEWAY_HOST: !Sub ${SaaSBoostPrivateApi}.execute-api.${AWS::Region}.amazonaws.com
          API_GATEWAY_STAGE: !Ref PrivateApiStage
          SAAS_BOOST_BUCKET: !Ref SaaSBoostBucket
          SAAS_BOOST_EVENT_BUS: !Ref SaaSBoostEventBus
          TENANT_CONFIG_DLQ: !Ref OnboardingTenantConfigDLQ
          RESOURCES_BUCKET: !Ref ResourcesBucket
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
  OnboardingTenantConfigEventMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      MaximumBatchingWindowInSeconds: 0
      Enabled: true
      EventSourceArn: !GetAtt OnboardingTenantConfigQueue.Arn
      FunctionName: !GetAtt OnboardingTenantConfig.Arn
      FunctionResponseTypes:
        - ReportBatchItemFailures
  OnboardingServiceEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sb-${Environment}-onboarding-events
      Description: SaaS Boost onboarding events
      EventBusName: !Ref SaaSBoostEventBus
      EventPattern:
        {
          "source": [
            "saas-boost"
          ],
          "detail-type": [{
            "prefix": "Onboarding "
          }]
        }
      State: ENABLED
      Targets:
        - Arn: !GetAtt OnboardingServiceEventHandler.Arn
          Id: !Sub sb-${Environment}-onboarding-events
  OnboardingServiceEventsPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnboardingServiceEventHandler
      Principal: events.amazonaws.com
      SourceArn: !GetAtt OnboardingServiceEventRule.Arn
  # CodePipeline sends its events to the default EventBridge bus, so we need a 2nd rule to match it
  OnboardingDeploymentPipelineEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sb-${Environment}-codepipeline-state
      Description: CodePipeline state changes for SaaS Boost onboarding deployment events
      EventPattern: # Skip STOPPING events
        {
          "source": [
            "aws.codepipeline"
          ],
          "detail-type": [
            "CodePipeline Pipeline Execution State Change"
          ],
          "detail": {
            "state": ["STARTED", "SUCCEEDED", "FAILED"]
          }
        }
      State: ENABLED
      Targets:
        - Arn: !GetAtt OnboardingServiceEventHandler.Arn
          Id: !Sub sb-${Environment}-codepipeline-state
  OnboardingDeploymentPipelineEventPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnboardingServiceEventHandler
      Principal: events.amazonaws.com
      SourceArn: !GetAtt OnboardingDeploymentPipelineEventRule.Arn
  OnboardingUpdateAppConfigLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/sb-${Environment}-onboarding-update-appconfig
      RetentionInDays: 30
  OnboardingUpdateAppConfig:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub sb-${Environment}-onboarding-update-appconfig
      Role: !GetAtt OnboardingServiceExecutionRole.Arn
      Runtime: java11
      Timeout: 600
      MemorySize: 512
      Handler: com.amazon.aws.partners.saasfactory.saasboost.OnboardingService::updateAppConfig
      Code:
        S3Bucket: !Ref SaaSBoostBucket
        S3Key: !Sub ${LambdaSourceFolder}/OnboardingService-lambda.zip
      Layers:
        - !Ref SaaSBoostUtilsLayer
        - !Ref ApiGatewayHelperLayer
      Environment:
        Variables:
          ONBOARDING_TABLE: !Ref OnboardingTable
          API_TRUST_ROLE: !Sub arn:aws:iam::${AWS::AccountId}:role/sb-private-api-trust-role-${Environment}-${AWS::Region}
          API_GATEWAY_HOST: !Sub ${SaaSBoostPrivateApi}.execute-api.${AWS::Region}.amazonaws.com
          API_GATEWAY_STAGE: !Ref PrivateApiStage
      Tags:
        - Key: "Application"
          Value: "SaaSBoost"
        - Key: "Environment"
          Value: !Ref Environment
        - Key: "BoostService"
          Value: "Onboarding"
Outputs:
  OnboardingServiceGetAllArn:
    Description: Onboarding Service get all onboarding requests Lambda ARN
    Value: !GetAtt OnboardingServiceGetAll.Arn
  OnboardingServiceStartArn:
    Description: Onboarding Service start onboarding Lambda ARN
    Value: !GetAtt OnboardingServiceStart.Arn
  OnboardingServiceByIdArn:
    Description: Onboarding Service get onboarding request by id Lambda ARN
    Value: !GetAtt OnboardingServiceGetById.Arn
  OnboardingUpdateAppConfigArn:
    Description: Onboarding Service update application config Lambda ARN
    Value: !GetAtt OnboardingUpdateAppConfig.Arn
...